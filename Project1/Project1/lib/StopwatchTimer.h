//*****************************************************************************
//*****************************************************************************
//  FILENAME: StopwatchTimer.h
//   Version: 2.6, Updated on 2015/3/4 at 22:27:47
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef StopwatchTimer_INCLUDE
#define StopwatchTimer_INCLUDE

#include <m8c.h>

#pragma fastcall16 StopwatchTimer_EnableInt
#pragma fastcall16 StopwatchTimer_DisableInt
#pragma fastcall16 StopwatchTimer_Start
#pragma fastcall16 StopwatchTimer_Stop
#pragma fastcall16 StopwatchTimer_wReadTimer                // Read  DR0
#pragma fastcall16 StopwatchTimer_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 StopwatchTimer_WritePeriod               // Write DR1
#pragma fastcall16 StopwatchTimer_wReadCompareValue         // Read  DR2
#pragma fastcall16 StopwatchTimer_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wStopwatchTimer_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wStopwatchTimer_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wStopwatchTimer_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wStopwatchTimer_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wStopwatchTimer_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the StopwatchTimer API.
//-------------------------------------------------

extern void StopwatchTimer_EnableInt(void);                           // Proxy 1
extern void StopwatchTimer_DisableInt(void);                          // Proxy 1
extern void StopwatchTimer_Start(void);                               // Proxy 1
extern void StopwatchTimer_Stop(void);                                // Proxy 1
extern WORD StopwatchTimer_wReadTimer(void);                          // Proxy 1
extern WORD StopwatchTimer_wReadTimerSaveCV(void);                    // Proxy 2
extern void StopwatchTimer_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD StopwatchTimer_wReadCompareValue(void);                   // Proxy 1
extern void StopwatchTimer_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wStopwatchTimer_ReadCompareValue(void);       // Deprecated
extern WORD wStopwatchTimer_ReadTimerSaveCV(void);        // Deprecated
extern WORD wStopwatchTimer_ReadCounter(void);            // Obsolete
extern WORD wStopwatchTimer_ReadTimer(void);              // Deprecated
extern WORD wStopwatchTimer_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for StopwatchTimer API's.
//--------------------------------------------------

#define StopwatchTimer_CONTROL_REG_START_BIT   ( 0x01 )
#define StopwatchTimer_INT_REG_ADDR            ( 0x0e1 )
#define StopwatchTimer_INT_MASK                ( 0x08 )


//--------------------------------------------------
// Constants for StopwatchTimer user defined values
//--------------------------------------------------

#define StopwatchTimer_PERIOD                  ( 0xccd )
#define StopwatchTimer_COMPARE_VALUE           ( 0x0 )


//-------------------------------------------------
// Register Addresses for StopwatchTimer
//-------------------------------------------------

#pragma ioport  StopwatchTimer_COUNTER_LSB_REG: 0x028      //Count register LSB
BYTE            StopwatchTimer_COUNTER_LSB_REG;
#pragma ioport  StopwatchTimer_COUNTER_MSB_REG: 0x02c      //Count register MSB
BYTE            StopwatchTimer_COUNTER_MSB_REG;
#pragma ioport  StopwatchTimer_PERIOD_LSB_REG:  0x029      //Period register LSB
BYTE            StopwatchTimer_PERIOD_LSB_REG;
#pragma ioport  StopwatchTimer_PERIOD_MSB_REG:  0x02d      //Period register MSB
BYTE            StopwatchTimer_PERIOD_MSB_REG;
#pragma ioport  StopwatchTimer_COMPARE_LSB_REG: 0x02a      //Compare register LSB
BYTE            StopwatchTimer_COMPARE_LSB_REG;
#pragma ioport  StopwatchTimer_COMPARE_MSB_REG: 0x02e      //Compare register MSB
BYTE            StopwatchTimer_COMPARE_MSB_REG;
#pragma ioport  StopwatchTimer_CONTROL_LSB_REG: 0x02b      //Control register LSB
BYTE            StopwatchTimer_CONTROL_LSB_REG;
#pragma ioport  StopwatchTimer_CONTROL_MSB_REG: 0x02f      //Control register MSB
BYTE            StopwatchTimer_CONTROL_MSB_REG;
#pragma ioport  StopwatchTimer_FUNC_LSB_REG:    0x128      //Function register LSB
BYTE            StopwatchTimer_FUNC_LSB_REG;
#pragma ioport  StopwatchTimer_FUNC_MSB_REG:    0x12c      //Function register MSB
BYTE            StopwatchTimer_FUNC_MSB_REG;
#pragma ioport  StopwatchTimer_INPUT_LSB_REG:   0x129      //Input register LSB
BYTE            StopwatchTimer_INPUT_LSB_REG;
#pragma ioport  StopwatchTimer_INPUT_MSB_REG:   0x12d      //Input register MSB
BYTE            StopwatchTimer_INPUT_MSB_REG;
#pragma ioport  StopwatchTimer_OUTPUT_LSB_REG:  0x12a      //Output register LSB
BYTE            StopwatchTimer_OUTPUT_LSB_REG;
#pragma ioport  StopwatchTimer_OUTPUT_MSB_REG:  0x12e      //Output register MSB
BYTE            StopwatchTimer_OUTPUT_MSB_REG;
#pragma ioport  StopwatchTimer_INT_REG:       0x0e1        //Interrupt Mask Register
BYTE            StopwatchTimer_INT_REG;


//-------------------------------------------------
// StopwatchTimer Macro 'Functions'
//-------------------------------------------------

#define StopwatchTimer_Start_M \
   ( StopwatchTimer_CONTROL_LSB_REG |=  StopwatchTimer_CONTROL_REG_START_BIT )

#define StopwatchTimer_Stop_M  \
   ( StopwatchTimer_CONTROL_LSB_REG &= ~StopwatchTimer_CONTROL_REG_START_BIT )

#define StopwatchTimer_EnableInt_M   \
   M8C_EnableIntMask(  StopwatchTimer_INT_REG, StopwatchTimer_INT_MASK )

#define StopwatchTimer_DisableInt_M  \
   M8C_DisableIntMask( StopwatchTimer_INT_REG, StopwatchTimer_INT_MASK )

#endif
// end of file StopwatchTimer.h
