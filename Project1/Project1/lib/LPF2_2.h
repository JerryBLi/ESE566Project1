//*****************************************************************************
//*****************************************************************************
//  FILENAME: LPF2_2.h
//   Version: 2.5, Updated on 2010/9/19 at 23:40:48
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: C declarations for the LPF2 User Module.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2010. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef LPF2_2_INCLUDE
#define LPF2_2_INCLUDE

#include <m8c.h>

#pragma fastcall16 LPF2_2_Start
#pragma fastcall16 LPF2_2_SetPower
#pragma fastcall16 LPF2_2_Stop
#pragma fastcall16 LPF2_2_SetC1
#pragma fastcall16 LPF2_2_SetC2
#pragma fastcall16 LPF2_2_SetC3
#pragma fastcall16 LPF2_2_SetC4
#pragma fastcall16 LPF2_2_SetCA
#pragma fastcall16 LPF2_2_SetCB
#pragma fastcall16 LPF2_2_SetPolarity

//-------------------------------------------------
// Prototypes of the LPF2_2 API.
//-------------------------------------------------

extern void LPF2_2_Start(BYTE bPowerSetting);
extern void LPF2_2_SetPower(BYTE bPowerSetting);
extern void LPF2_2_Stop(void);
extern void LPF2_2_SetC1(BYTE bCapValue);
extern void LPF2_2_SetC2(BYTE bCapValue);
extern void LPF2_2_SetC3(BYTE bCapValue);
extern void LPF2_2_SetC4(BYTE bCapValue);
extern void LPF2_2_SetCA(BYTE bCapValue);
extern void LPF2_2_SetCB(BYTE bCapValue);
extern void LPF2_2_SetPolarity(BYTE bPolaritySetting);

//-------------------------------------------------
// Defines for LPF2_2 API's.
//-------------------------------------------------

#define LPF2_2_OFF                               (0x00)
#define LPF2_2_LOWPOWER                          (0x01)
#define LPF2_2_MEDPOWER                          (0x02)
#define LPF2_2_HIGHPOWER                         (0x03)

#define LPF2_2_FEEDBACK_16                       (0x00)
#define LPF2_2_FEEDBACK_32                       (0x01)

#define LPF2_2_POLARITY_INVERTING                (0x00)
#define LPF2_2_POLARITY_NON_INVERTING            (0x01)

#define LPF2_2_AMD_MSK         (0x70)
#define LPF2_2_AMD_VAL         (0x0)

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

#pragma ioport  LPF2_2_FLIN_CR0:    0x088                       //Analog SCA control register 0
BYTE            LPF2_2_FLIN_CR0;
#pragma ioport  LPF2_2_FLIN_CR1:    0x089                       //Analog SCA control register 1
BYTE            LPF2_2_FLIN_CR1;
#pragma ioport  LPF2_2_FLIN_CR2:    0x08a                       //Analog SCA control register 2
BYTE            LPF2_2_FLIN_CR2;
#pragma ioport  LPF2_2_FLIN_CR3:    0x08b                       //Analog SCA control register 3
BYTE            LPF2_2_FLIN_CR3;
#pragma ioport  LPF2_2_FLOUT_CR0:   0x08c                      //Analog SCB control register 0
BYTE            LPF2_2_FLOUT_CR0;
#pragma ioport  LPF2_2_FLOUT_CR1:   0x08d                      //Analog SCB control register 1
BYTE            LPF2_2_FLOUT_CR1;
#pragma ioport  LPF2_2_FLOUT_CR2:   0x08e                      //Analog SCB control register 2
BYTE            LPF2_2_FLOUT_CR2;
#pragma ioport  LPF2_2_FLOUT_CR3:   0x08f                      //Analog SCB control register 3
BYTE            LPF2_2_FLOUT_CR3;

//  LPF2_2 Cap naming convention per Gregorian and Temes, p293

#pragma ioport  LPF2_2_FILT_C1_REG: 0x088
BYTE            LPF2_2_FILT_C1_REG;
#pragma ioport  LPF2_2_FILT_C2_REG: 0x089
BYTE            LPF2_2_FILT_C2_REG;
#pragma ioport  LPF2_2_FILT_C3_REG: 0x08c
BYTE            LPF2_2_FILT_C3_REG;
#pragma ioport  LPF2_2_FILT_C4_REG: 0x08e
BYTE            LPF2_2_FILT_C4_REG;
#pragma ioport  LPF2_2_FILT_CA_REG: 0x088
BYTE            LPF2_2_FILT_CA_REG;
#pragma ioport  LPF2_2_FILT_CB_REG: 0x08c
BYTE            LPF2_2_FILT_CB_REG;

#pragma ioport  LPF2_2_AMD_REG:     0x163 //Analog Modulator control Register
BYTE            LPF2_2_AMD_REG;

#endif
// end of file LPF2_2.h
